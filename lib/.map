{"version":3,"sources":["src/config.js","src/custom-elements/mvc-view.js","src/event-emitter.js","src/index.js","src/model.js","src/view.js"],"names":[],"mappings":"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","file":"lib","sourcesContent":["const APP_PREFIX = 'mvc';\r\n\r\nexport const MVC_OBSERVES = `${APP_PREFIX}-observes`;\r\nexport const MVC_CONTROLS = `${APP_PREFIX}-controls`;\r\nexport const MVC_RADIO_GROUP = `${APP_PREFIX}-radio-group`;\r\nexport const MVC_CHECK_GROUP = `${APP_PREFIX}-check-group`;\r\n\r\nexport const MVC_MODEL_MODIFIED = `${APP_PREFIX}-model-modified`;\r\nexport const MVC_PROPERTY_CHANGED = `${APP_PREFIX}-property-changed`;\r\nexport const MVC_INPUT_CHANGED = `${APP_PREFIX}-input-changed`;\r\n\r\n\r\nexport const MVC_VIEW_ELEMENT = `${APP_PREFIX}-view`;\r\n","import View from '../view';\r\nimport Model from '../model';\r\n\r\nexport default class MVCView extends HTMLElement {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  connectedCallback() {\r\n    this._shadow = this.attachShadow({\r\n      mode: 'open'\r\n    });\r\n    let formNode = document.createElement('form');\r\n    let slot = document.createElement('slot');\r\n    formNode.append(slot);\r\n    this._shadow.appendChild(formNode);\r\n  }\r\n\r\n  get model() {\r\n    return this._model;\r\n  }\r\n\r\n  set model(model) {\r\n    if (this._model) {\r\n      throw new Error('The model may only be set once.');\r\n    }\r\n    this._model = new Model(model);\r\n    this._view = new View(this, this._model);\r\n  }\r\n}\r\n","//MVCEventEmitter class slightly modified from\r\n//https://developer.mozilla.org/en-US/docs/Web/API/EventTarget#_Simple_implementation_of_EventTarget\r\nexport default class MVCEventEmitter {\r\n  constructor() {\r\n    this.listeners = {};\r\n  }\r\n\r\n  addEventListener(type, callback) {\r\n    if (!(type in this.listeners)) {\r\n      this.listeners[type] = [];\r\n    }\r\n    this.listeners[type].push(callback);\r\n  }\r\n\r\n  removeEventListener(type, callback) {\r\n    if (!(type in this.listeners)) {\r\n      return;\r\n    }\r\n    var stack = this.listeners[type];\r\n    for (var i = 0, l = stack.length; i < l; i++) {\r\n      if (stack[i] === callback) {\r\n        stack.splice(i, 1);\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  dispatchEvent(event) {\r\n    if (!(event.type in this.listeners)) {\r\n      return true;\r\n    }\r\n    var stack = this.listeners[event.type].slice();\r\n\r\n    for (var i = 0, l = stack.length; i < l; i++) {\r\n      stack[i].call(this, event);\r\n    }\r\n    return !event.defaultPrevented;\r\n  }\r\n}\r\n","import Model from './model';\nimport View from './view';\nimport MVCView from './custom-elements/mvc-view';\n\nimport {MVC_VIEW_ELEMENT} from './config';\nwindow.customElements.define(MVC_VIEW_ELEMENT, MVCView);\n\nexport {\n  Model,\n  View\n};\n","import MVCEventEmitter from './event-emitter';\r\n\r\nimport {\r\n  MVC_PROPERTY_CHANGED,\r\n  MVC_MODEL_MODIFIED\r\n} from './config';\r\n\r\nexport default class Model extends MVCEventEmitter {\r\n  constructor(dataModel) {\r\n    super();\r\n    for (let k of Object.keys(dataModel)) {\r\n\r\n      Object.defineProperty(this, k, {\r\n        innumerable: true,\r\n        get: () => {\r\n          return dataModel[k];\r\n        },\r\n        set: (val) => {\r\n          dataModel[k] = val;\r\n          let e = new CustomEvent(MVC_PROPERTY_CHANGED, {\r\n            detail: {\r\n              model: dataModel,\r\n              property: k,\r\n              value: val\r\n            }\r\n          });\r\n          this.dispatchEvent(e);\r\n        }\r\n      });\r\n    }\r\n\r\n    //TODO: determine whether access to the model is required\r\n    Object.defineProperty(this, 'model', {\r\n      innumerable: true,\r\n      get: () => {\r\n        return dataModel;\r\n      }\r\n    });\r\n\r\n    let modify = (val) => {\r\n      Object.assign(dataModel, val);\r\n      //In some situations, it may be too computationally\r\n      //intensive to make updates to all listeners to model,\r\n      //so providing a list of the properties and values that\r\n      //were changed and the raw val object as \"updates\" so\r\n      //that only the updates are necessary to process\r\n      let e = new CustomEvent(MVC_MODEL_MODIFIED, {\r\n        detail: {\r\n          updates: val,\r\n          model: dataModel,\r\n          properties: [Object.keys(val)],\r\n          values: [Object.values(val)]\r\n        }\r\n      });\r\n\r\n      this.dispatchEvent(e);\r\n    };\r\n\r\n    Object.defineProperty(this, 'modify', {\r\n      value: modify\r\n    });\r\n  }\r\n}\r\n","import {\r\n  MVC_CONTROLS,\r\n  MVC_OBSERVES,\r\n  MVC_RADIO_GROUP,\r\n  MVC_CHECK_GROUP,\r\n  MVC_PROPERTY_CHANGED,\r\n  MVC_MODEL_MODIFIED,\r\n  MVC_INPUT_CHANGED\r\n} from './config';\r\n\r\nimport MVCEventEmitter from './event-emitter';\r\n\r\nexport default class View extends MVCEventEmitter {\r\n  constructor(viewDOM, model) {\r\n    super();\r\n\r\n    let observers = viewDOM.querySelectorAll(`[${MVC_OBSERVES}]`);\r\n    let controls = viewDOM.querySelectorAll(`[${MVC_CONTROLS}]`);\r\n\r\n    let radioGroupObservers = viewDOM.querySelectorAll(`[${MVC_OBSERVES}][${MVC_RADIO_GROUP}]`);\r\n    let radioGroupControls = viewDOM.querySelectorAll(`[${MVC_CONTROLS}][${MVC_RADIO_GROUP}]`);\r\n\r\n    let checkGroupObservers = viewDOM.querySelectorAll(`[${MVC_OBSERVES}][${MVC_CHECK_GROUP}]`);\r\n    let checkGroupControls = viewDOM.querySelectorAll(`[${MVC_CONTROLS}][${MVC_CHECK_GROUP}]`);\r\n\r\n    radioGroupObservers = Array.prototype.map.call(radioGroupObservers, (o) => o);\r\n    radioGroupControls = Array.prototype.map.call(radioGroupControls, (c) => c);\r\n\r\n    checkGroupObservers = Array.prototype.map.call(checkGroupObservers, (o) => o);\r\n    checkGroupControls = Array.prototype.map.call(checkGroupControls, (c) => c);\r\n\r\n    function getInputValue(control) {\r\n      let inputType = control.getAttribute('type');\r\n\r\n      //most of these can just fall through to default, listing them exhaustively for thoroughness\r\n      switch (inputType) {\r\n        case 'button':\r\n        case 'file': //TODO: figure out if possible to handle file\r\n        case 'image':\r\n        case 'password': //you should never be allowed to control this programmatically\r\n        case 'reset':\r\n        case 'submit':\r\n          throw new TypeError(`Inputs of type ${inputType} cannot observe models`);\r\n          break;\r\n        case 'checkbox':\r\n          return control.checked;\r\n          break;\r\n          //case 'color': case 'date': case 'datetime-local': case 'email': case 'hidden': case 'month': case 'number': case 'radio': case 'range': case 'search': case 'tel': case 'text': case 'time': case 'url': case 'week':\r\n        default:\r\n          return control.value;\r\n          break;\r\n      }\r\n    }\r\n\r\n    function getControlValue(control) {\r\n      switch (control.tagName) {\r\n        case 'INPUT':\r\n          return getInputValue(control);\r\n        case 'FIELDSET':\r\n          return fieldsetGetAdapter.get(control)();\r\n        case 'SELECT':\r\n          return control.value;\r\n        default:\r\n          return control.innerHTML;\r\n      }\r\n    }\r\n\r\n    function updateInputValue(observer, value) {\r\n      let inputType = observer.getAttribute('type');\r\n      switch (inputType) {\r\n        case 'button':\r\n        case 'file': //TODO: figure out if possible to handle file\r\n        case 'image':\r\n        case 'reset':\r\n        case 'submit':\r\n          throw new TypeError(`Inputs of type ${inputType} do not have values`);\r\n          break;\r\n        case 'password': //you should never be allowed to control this programmatically\r\n          throw new TypeError(`Inputs of type ${inputType} may not be modified by controllers`);\r\n        case 'checkbox':\r\n          observer.checked = value;\r\n          break;\r\n          //TODO: implement errors for cases when types like numbers and ranges have min, max, and step attributes\r\n          //TODO: test dates\r\n          //case 'color': case 'date': case 'datetime-local': case 'email': case 'hidden': case 'month': case 'number': case 'radio': case 'range': case 'search': case 'tel': case 'text': case 'time': case 'url': case 'week':\r\n        default:\r\n          observer.value = value;\r\n          break;\r\n      }\r\n    }\r\n\r\n    function updateObserver(observer, value) {\r\n      switch (observer.tagName) {\r\n        case 'INPUT':\r\n          updateInputValue(observer, value);\r\n          break;\r\n        case 'FIELDSET':\r\n          if (observer.hasAttribute(MVC_RADIO_GROUP) && !fieldsetOptionsMap.get(observer).includes(value)) {\r\n            throw new RangeError(`The value supplied, ${value}, is not a valid option`);\r\n          } else if (observer.hasAttribute(MVC_CHECK_GROUP) && Object.keys(value).filter(v => !fieldsetOptionsMap.get(observer).includes(v)).length) {\r\n            throw new RangeError(`At least one of the values supplied, ${value}, is not a valid option`);\r\n          }\r\n          fieldsetSetAdapter.get(observer)(value);\r\n          break;\r\n        case 'SELECT':\r\n          if (!selectOptionsMap.get(observer).includes(value)) {\r\n            throw new RangeError(`The value supplied, ${value}, is not a valid option`);\r\n          }\r\n          observer.value = value;\r\n          break;\r\n        default:\r\n          observer.innerHTML = value;\r\n          break;\r\n      }\r\n    }\r\n\r\n    let fieldsetGetAdapter = new Map();\r\n    for (let i = 0; i < controls.length; i++) {\r\n      let addEventListeners = (c) => {\r\n        for (let val in controlledValues) {\r\n          c.addEventListener('change', (e) => {\r\n            let ce = new CustomEvent(MVC_INPUT_CHANGED, {\r\n              target: e.target,\r\n              detail: {\r\n                property: controlledValues[val],\r\n                value: getControlValue(controls[i])\r\n              }\r\n            });\r\n            model[controlledValues[val]] = getControlValue(controls[i]);\r\n            this.dispatchEvent(ce);\r\n          });\r\n        }\r\n      }\r\n\r\n      let controlledValues = controls[i].getAttribute(MVC_CONTROLS).split(',');\r\n      if (radioGroupControls.includes(controls[i])) {\r\n        let radioGroupName = controls[i].getAttribute(MVC_RADIO_GROUP);\r\n\r\n        let radioForm = controls[i].closest('form');\r\n        let nodeList = radioForm ? radioForm.elements[radioGroupName] : document.getElementsByName(radioGroupName);\r\n\r\n        fieldsetGetAdapter.set(controls[i], (radioForm ?\r\n          () => nodeList.value :\r\n          () => controls[i].querySelector(':checked').value\r\n        ));\r\n\r\n        nodeList.forEach((n) => {\r\n          addEventListeners(n);\r\n        });\r\n      } else if (checkGroupControls.includes(controls[i])) {\r\n        let nodeList = controls[i].querySelectorAll('[type=\"checkbox\"]');\r\n\r\n        fieldsetGetAdapter.set(controls[i], () => {\r\n          let result = {};\r\n          nodeList.forEach((n) => {\r\n            result[n.value] = n.checked;\r\n          });\r\n          return result;\r\n        });\r\n\r\n        nodeList.forEach((n) => {\r\n          addEventListeners(n);\r\n        });\r\n      } else {\r\n        addEventListeners(controls[i]);\r\n      }\r\n    }\r\n\r\n    let fieldsetOptionsMap = new Map();\r\n    let selectOptionsMap = new Map();\r\n    let fieldsetSetAdapter = new Map();\r\n    for (let i = 0; i < observers.length; i++) {\r\n      if (radioGroupObservers.includes(observers[i])) {\r\n        let radioGroupName = observers[i].getAttribute(MVC_RADIO_GROUP);\r\n\r\n        let radioForm = observers[i].closest('form');\r\n        let nodeList = radioForm ? radioForm.elements[radioGroupName] : document.getElementsByName(radioGroupName);\r\n        fieldsetSetAdapter.set(observers[i], (radioForm ?\r\n          (val) => nodeList.value = val :\r\n          (val) => nodeList.forEach((n) => {\r\n            n.checked = false;\r\n            if (n.value === val) {\r\n              n.checked = true;\r\n            }\r\n          })));\r\n        let options = [];\r\n        nodeList.forEach((o) => {\r\n          options.push(o.value);\r\n        });\r\n        fieldsetOptionsMap.set(observers[i], options)\r\n      } else if (checkGroupObservers.includes(observers[i])) {\r\n        let nodeList = observers[i].querySelectorAll('[type=\"checkbox\"]');\r\n        fieldsetSetAdapter.set(observers[i], (val) => {\r\n          nodeList.forEach((n) => {\r\n            n.checked = val[n.value];\r\n          });\r\n        });\r\n        let options = [];\r\n        nodeList.forEach((o) => {\r\n          options.push(o.value);\r\n        });\r\n        fieldsetOptionsMap.set(observers[i], options);\r\n      } else if (observers[i].tagName === 'SELECT') {\r\n        let options = [];\r\n        observers[i].querySelectorAll('option').forEach((o) => {\r\n          options.push(o.value);\r\n        });\r\n        selectOptionsMap.set(observers[i], options);\r\n      }\r\n\r\n      let observedValues = observers[i].getAttribute(MVC_OBSERVES).split(',');\r\n      for (let val in observedValues) {\r\n        model.addEventListener(MVC_PROPERTY_CHANGED, (e) => {\r\n          if (observedValues[val] === e.detail.property && e.target !== observers[i]) {\r\n            updateObserver(observers[i], e.detail.value);\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    model.addEventListener(MVC_MODEL_MODIFIED, (e) => {\r\n      for (let i = 0; i < observers.length; i++) {\r\n        let observedValues = observers[i].getAttribute(MVC_OBSERVES).split(',');\r\n        for (let val in observedValues) {\r\n          let updatedVal = e.detail.updates[observedValues[val]];\r\n          if (updatedVal) {\r\n            updateObserver(observers[i], updatedVal);\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n}\r\n"]}