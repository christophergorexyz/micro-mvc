{"version":3,"sources":["../src/event-emitter.js"],"names":["EventEmitter","listeners","type","callback","push","stack","i","l","length","splice","event","slice","call","defaultPrevented"],"mappings":";;;;;;;;;;;;;AAAA;AACA;IACqBA,Y;;;AACnB,0BAAc;AAAA;AACZ,SAAKC,SAAL,GAAiB,EAAjB;AACD;;;;qCAEgBC,I,EAAMC,Q,EAAU;AAC/B,UAAI,EAAED,IAAI,IAAI,KAAKD,SAAf,CAAJ,EAA+B;AAC7B,aAAKA,SAAL,CAAeC,IAAf,IAAuB,EAAvB;AACD;;AACD,WAAKD,SAAL,CAAeC,IAAf,EAAqBE,IAArB,CAA0BD,QAA1B;AACD;;;wCAEmBD,I,EAAMC,Q,EAAU;AAClC,UAAI,EAAED,IAAI,IAAI,KAAKD,SAAf,CAAJ,EAA+B;AAC7B;AACD;;AACD,UAAII,KAAK,GAAG,KAAKJ,SAAL,CAAeC,IAAf,CAAZ;;AACA,WAAK,IAAII,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGF,KAAK,CAACG,MAA1B,EAAkCF,CAAC,GAAGC,CAAtC,EAAyCD,CAAC,EAA1C,EAA8C;AAC5C,YAAID,KAAK,CAACC,CAAD,CAAL,KAAaH,QAAjB,EAA2B;AACzBE,UAAAA,KAAK,CAACI,MAAN,CAAaH,CAAb,EAAgB,CAAhB;AACA;AACD;AACF;AACF;;;kCAEaI,K,EAAO;AACnB,UAAI,EAAEA,KAAK,CAACR,IAAN,IAAc,KAAKD,SAArB,CAAJ,EAAqC;AACnC,eAAO,IAAP;AACD;;AACD,UAAII,KAAK,GAAG,KAAKJ,SAAL,CAAeS,KAAK,CAACR,IAArB,EAA2BS,KAA3B,EAAZ;;AAEA,WAAK,IAAIL,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGF,KAAK,CAACG,MAA1B,EAAkCF,CAAC,GAAGC,CAAtC,EAAyCD,CAAC,EAA1C,EAA8C;AAC5CD,QAAAA,KAAK,CAACC,CAAD,CAAL,CAASM,IAAT,CAAc,IAAd,EAAoBF,KAApB;AACD;;AACD,aAAO,CAACA,KAAK,CAACG,gBAAd;AACD","sourcesContent":["//MVCEventEmitter class slightly modified from\r\n//https://developer.mozilla.org/en-US/docs/Web/API/EventTarget#_Simple_implementation_of_EventTarget\r\nexport default class EventEmitter {\r\n  constructor() {\r\n    this.listeners = {};\r\n  }\r\n\r\n  addEventListener(type, callback) {\r\n    if (!(type in this.listeners)) {\r\n      this.listeners[type] = [];\r\n    }\r\n    this.listeners[type].push(callback);\r\n  }\r\n\r\n  removeEventListener(type, callback) {\r\n    if (!(type in this.listeners)) {\r\n      return;\r\n    }\r\n    var stack = this.listeners[type];\r\n    for (var i = 0, l = stack.length; i < l; i++) {\r\n      if (stack[i] === callback) {\r\n        stack.splice(i, 1);\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  dispatchEvent(event) {\r\n    if (!(event.type in this.listeners)) {\r\n      return true;\r\n    }\r\n    var stack = this.listeners[event.type].slice();\r\n\r\n    for (var i = 0, l = stack.length; i < l; i++) {\r\n      stack[i].call(this, event);\r\n    }\r\n    return !event.defaultPrevented;\r\n  }\r\n}\r\n"],"file":"event-emitter.js"}