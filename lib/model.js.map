{"version":3,"sources":["../src/model.js"],"names":["Model","dataModel","k","Object","defineProperty","innumerable","get","set","val","e","CustomEvent","MVC_PROPERTY_CHANGED","detail","model","property","value","dispatchEvent","keys","modify","assign","MVC_MODEL_MODIFIED","updates","properties","values","MVCEventEmitter"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;AAEA;;IAKqBA,K;;;;;AACnB,iBAAYC,SAAZ,EAAuB;AAAA;;AAAA;AACrB;;AADqB;AAEhB,UAAIC,CAAC,mBAAL;AAEHC,MAAAA,MAAM,CAACC,cAAP,iDAA4BF,CAA5B,EAA+B;AAC7BG,QAAAA,WAAW,EAAE,IADgB;AAE7BC,QAAAA,GAAG,EAAE,eAAM;AACT,iBAAOL,SAAS,CAACC,CAAD,CAAhB;AACD,SAJ4B;AAK7BK,QAAAA,GAAG,EAAE,aAACC,GAAD,EAAS;AACZP,UAAAA,SAAS,CAACC,CAAD,CAAT,GAAeM,GAAf;AACA,cAAIC,CAAC,GAAG,IAAIC,WAAJ,CAAgBC,4BAAhB,EAAsC;AAC5CC,YAAAA,MAAM,EAAE;AACNC,cAAAA,KAAK,EAAEZ,SADD;AAENa,cAAAA,QAAQ,EAAEZ,CAFJ;AAGNa,cAAAA,KAAK,EAAEP;AAHD;AADoC,WAAtC,CAAR;;AAOA,gBAAKQ,aAAL,CAAmBP,CAAnB;AACD;AAf4B,OAA/B;AAJmB;;AAErB,oCAAcN,MAAM,CAACc,IAAP,CAAYhB,SAAZ,CAAd,kCAAsC;AAAA;AAmBrC,KArBoB,CAuBrB;;;AACAE,IAAAA,MAAM,CAACC,cAAP,iDAA4B,OAA5B,EAAqC;AACnCC,MAAAA,WAAW,EAAE,IADsB;AAEnCC,MAAAA,GAAG,EAAE,eAAM;AACT,eAAOL,SAAP;AACD;AAJkC,KAArC;;AAOA,QAAIiB,MAAM,GAAG,SAATA,MAAS,CAACV,GAAD,EAAS;AACpBL,MAAAA,MAAM,CAACgB,MAAP,CAAclB,SAAd,EAAyBO,GAAzB,EADoB,CAEpB;AACA;AACA;AACA;AACA;;AACA,UAAIC,CAAC,GAAG,IAAIC,WAAJ,CAAgBU,0BAAhB,EAAoC;AAC1CR,QAAAA,MAAM,EAAE;AACNS,UAAAA,OAAO,EAAEb,GADH;AAENK,UAAAA,KAAK,EAAEZ,SAFD;AAGNqB,UAAAA,UAAU,EAAE,CAACnB,MAAM,CAACc,IAAP,CAAYT,GAAZ,CAAD,CAHN;AAINe,UAAAA,MAAM,EAAE,CAACpB,MAAM,CAACoB,MAAP,CAAcf,GAAd,CAAD;AAJF;AADkC,OAApC,CAAR;;AASA,YAAKQ,aAAL,CAAmBP,CAAnB;AACD,KAjBD;;AAmBAN,IAAAA,MAAM,CAACC,cAAP,iDAA4B,QAA5B,EAAsC;AACpCW,MAAAA,KAAK,EAAEG;AAD6B,KAAtC;AAlDqB;AAqDtB;;;EAtDgCM,wB","sourcesContent":["import MVCEventEmitter from './event-emitter';\r\n\r\nimport {\r\n  MVC_PROPERTY_CHANGED,\r\n  MVC_MODEL_MODIFIED\r\n} from './config';\r\n\r\nexport default class Model extends MVCEventEmitter {\r\n  constructor(dataModel) {\r\n    super();\r\n    for (let k of Object.keys(dataModel)) {\r\n\r\n      Object.defineProperty(this, k, {\r\n        innumerable: true,\r\n        get: () => {\r\n          return dataModel[k];\r\n        },\r\n        set: (val) => {\r\n          dataModel[k] = val;\r\n          let e = new CustomEvent(MVC_PROPERTY_CHANGED, {\r\n            detail: {\r\n              model: dataModel,\r\n              property: k,\r\n              value: val\r\n            }\r\n          });\r\n          this.dispatchEvent(e);\r\n        }\r\n      });\r\n    }\r\n\r\n    //TODO: determine whether access to the model is required\r\n    Object.defineProperty(this, 'model', {\r\n      innumerable: true,\r\n      get: () => {\r\n        return dataModel;\r\n      }\r\n    });\r\n\r\n    let modify = (val) => {\r\n      Object.assign(dataModel, val);\r\n      //In some situations, it may be too computationally\r\n      //intensive to make updates to all listeners to model,\r\n      //so providing a list of the properties and values that\r\n      //were changed and the raw val object as \"updates\" so\r\n      //that only the updates are necessary to process\r\n      let e = new CustomEvent(MVC_MODEL_MODIFIED, {\r\n        detail: {\r\n          updates: val,\r\n          model: dataModel,\r\n          properties: [Object.keys(val)],\r\n          values: [Object.values(val)]\r\n        }\r\n      });\r\n\r\n      this.dispatchEvent(e);\r\n    };\r\n\r\n    Object.defineProperty(this, 'modify', {\r\n      value: modify\r\n    });\r\n  }\r\n}\r\n"],"file":"model.js"}